#!/bin/bash
#set -evx

#==このファイルについて=============================================================================
#　このファイルは、各種判定を行う処理をシェル関数にまとめたファイルとなります
#　各シェル関数の処理内容は、コメントにて説明します
#===================================================================================================

#### 実行されている環境のディストリビューション判定シェル ##########################################

Distribution-Check()
{
	if [ -e /etc/redhat-release ]; then
	# RedHat系のどのディストリビューションかを判定する
	osversion=`cat /etc/redhat-release`
		if [[ "${osversion}" == "CentOS Linux release 7."* ]]; then

			echo "CentOS7"

		else

			echo "not_CentOS7"

		fi
	else

		echo "not_Redhat"

	fi

} 


#### 新規ユーザー作成実施用シェル関数 #############################################################

Creat-User()
{
   ##関数説明######################################################################################
   # 操作を実施しているユーザーに対して、readコマンドを利用した作成したいユーザー名の問い合わせ
   # を行い、指定されたユーザー名が既存のユーザー名と重複が無ければそのまま作成する
   # また、作成完了時にはユーザー作成成功した旨のメッセージとホームディレクトリの場所を表示
   # する仕様とする。
   ################################################################################################

   while true do

      # ユーザーへアカウント名を入力する用促すメッセージ
      echo '新規ユーザーの作成を実行します。作成したいユーザー名を入力して下さい：'
      read inputname

      # ユーザー名が既に存在するか/etc/passwd上から確認をする主に行が存在するか確認
      Duplicaterow=`cat /etc/passwd | grep "${inputname}" | wc -l`

      # 変数Duplicaterowに代入された値から、重複ユーザーがいないかを確認
      if ["$Duplicaterow" -ne 0 ]; then

         # 重複ユーザーが存在した場合の処理
         echo "${inputname}は既に存在するユーザー名です。別の名前を指定して下さい。"

　　　else

         # 重複ユーザーが存在しない場合はアカウント作成
         echo "${inputname}のアカウント作成を行います"
         /sbin/useradd "${inputname}" && echo "ユーザーアカウント${inputname}の作成成功!!" && ls -al "/home/${inputname}" && break 0

         # ユーザー追加失敗処理
         echo 'ユーザー作成が失敗しているようです。確認して下さい。' && exit 1

      fi

   done
   
}

